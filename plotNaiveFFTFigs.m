% plotNaiveFFTFigs.m
% Comes from indexAnal2 (indices 5 and 17)
% Dependencies: groupAnalysisParams.m
% Also depends on files generated by: rateFFT.m

clearvars

% load parameters
groupAnalysisParams

% Which type of run to analyze
analType = 'darts_dartRival'; %'darts'

% Plots number of switches vs. oscFreq
C{1} = 'numSwitches';
C{2} = 'oscFreq';

plotLabel.beh = 'Switches / trial';
plotLabel.eeg = 'Oscillation frequency (Hz)';

analMatrix{1} = [];
analMatrix{2} = [];
idVect = [];

for iGroup = 1:length(groupParNums)
    for parNum = groupParNums{iGroup}
        numFormat = '%02d';
        parName = [groupCodes{iGroup} num2str(parNum, numFormat)];
        analRow = nan(1, 2);
        
        % get participant files
        parFiles = dir([bResultsDir parName '*']);
        
        %% get behavioral switch rate
        
        % Num switches
        if exist([bResultsDir parName '_' analType '_Switches.txt'],'file')
            analRow(1) = load([bResultsDir parName '_' analType '_Switches.txt']);
            % Limit number of switches (for purpose of fft analysis)
            %if analRow(1) < 3 % for FFT analysis, minimum switch rate
               % analRow(1) = NaN;
            %end
        end
        
         % store participant's study ID
        idVect = [idVect; parNum];
        
        %% get oscillation frequencies
        
        if exist([indicesDir 'rateFreqs/' parName '.mat'], 'file')
            load([indicesDir 'rateFreqs/' parName '.mat']);
            analRow(2) = oscFreq;
            %if analRow(1) < 3 % for FFT analysis, minimum switch rate
                %analRow(2) = NaN;
            %end
        end
        
        analMatrix{iGroup} = [analMatrix{iGroup}; analRow];
        
    end
       
    % calculate correlation coefficients
    %[R{iGroup}, P{iGroup}] = corrcoef(analMatrix{iGroup}, 'rows', 'pairwise'); % pearson's coefficient
    [R{iGroup}, P{iGroup}] = corr(analMatrix{iGroup}, 'type','spearman', 'rows', 'pairwise');    
end

%% plot potential correlations (Both groups on one plot)
colors = [colorC; colorA];

i = 1; % switch rate
j = 2; % naive oscillation frequency
figure
hold on
for iGroup = 1:length(groupParNums)
    %if abs(P(i,j)) < 0.1
    pl{iGroup} = plot(analMatrix{iGroup}(:,i), analMatrix{iGroup}(:,j), 'o', 'MarkerFaceColor', colors(iGroup,:), 'MarkerEdgeColor', colors(iGroup,:));
    validi = ~isnan(analMatrix{iGroup}(:,i));
    validj = ~isnan(analMatrix{iGroup}(:,j));
    validBoth = validi & validj;
    p = polyfit(analMatrix{iGroup}(validBoth,i),analMatrix{iGroup}(validBoth,j),1);   % p returns 2 coefficients fitting r = a_1 * x + a_2
    line = p(1) .* analMatrix{iGroup}(validBoth,i) + p(2); % compute a new vector r that has matching datapoints in x
    plot(analMatrix{iGroup}(validBoth,i), line, 'Color',colors(iGroup,:)); %axis([-1 14 0 2])
    
    xlabel([plotLabel.beh]);
    ylabel([plotLabel.eeg]);
    %end
end

% put r- and p-values on plot
for iGroup = 1:length(groupParNums)
    xax = xlim;
    yax = ylim;
    text(xax(1) + (xax(2) - xax(1))/20, yax(2) - (yax(2) - yax(1))*(.05*iGroup + .2),['r =' num2str(R{iGroup}(i,j)) '   p =' num2str(P{iGroup}(i,j))], 'FontSize', 10, 'Color', colors(iGroup,:))
end

legend([pl{1} pl{2}],'Controls', 'ASC','Location','northwest');
box off;

% save figures
if strcmp(analType, 'darts_dartRival')
    figName = [corrPlotDir C{i} 'vs' C{j} '_DARTS.jpg'];
else
    figName = [corrPlotDir '_' C{i} 'vs' C{j} '_MARZ.jpg'];
end
saveas(gcf,figName,'jpg')

%% Correlations (one plot for each group)

for iGroup = 1:length(groupParNums)
    figure
    hold on
    %if abs(P(i,j)) < 0.1
    plot(analMatrix{iGroup}(:,i), analMatrix{iGroup}(:,j), 'o', 'MarkerFaceColor', colors(iGroup,:), 'MarkerEdgeColor', colors(iGroup,:));
    validi = ~isnan(analMatrix{iGroup}(:,i));
    validj = ~isnan(analMatrix{iGroup}(:,j));
    validBoth = validi & validj;
    p = polyfit(analMatrix{iGroup}(validBoth,i),analMatrix{iGroup}(validBoth,j),1);   % p returns 2 coefficients fitting r = a_1 * x + a_2
    line = p(1) .* analMatrix{iGroup}(validBoth,i) + p(2); % compute a new vector r that has matching datapoints in x
    plot(analMatrix{iGroup}(validBoth,i), line, 'Color',colors(iGroup,:)); %axis([-1 14 0 2])
    
    xlabel([plotLabel.beh]);
    ylabel([plotLabel.eeg]);
    %end
    
    %xlim([4 20])
    %ylim([0.16 0.3])
    
    % put r- and p-values on plot
    xax = xlim;
    yax = ylim;
    text(xax(1) + (xax(2) - xax(1))/20, yax(2) - (yax(2) - yax(1))*(.1),['r =' num2str(R{iGroup}(i,j)) '   p =' num2str(P{iGroup}(i,j))], 'FontSize', 10, 'Color', colors(iGroup,:))
    
    if iGroup == 1
        title('Controls      .')
    else
        title('ASC         .')
    end
    
    % save figure
    if strcmp(analType, 'darts_dartRival')
        figName = [corrPlotDir C{i} 'vs' C{j} '_DARTS_' analGroupIDs{iGroup} '.jpg'];
    else
        figName = [corrPlotDir '_' C{i} 'vs' C{j} '_MARZ_' analGroupIDs{iGroup} '.jpg'];
    end
    saveas(gcf,figName,'jpg')
end

%% Bar Graph: look at oscillation frequency group difference

iIndex = 2;
figure;
controlData = analMatrix{1}(:,iIndex);
ascData = analMatrix{2}(:,iIndex);
bar(1, nanmean(controlData), 'FaceColor', colors(1,:));
hold on
bar(2, nanmean(ascData), 'FaceColor', colors(2,:));
scatter(ones(1,length(controlData)), controlData, [], colors(1,:)*0.6,'filled');
scatter(ones(1,length(ascData))+ 1, ascData, [], colors(2,:)*0.6,'filled');
errorbar([1 2], [nanmean(controlData) nanmean(ascData)], [ste(controlData) ste(ascData)],'k.','LineWidth',2);
set(gca,'XTick',[1 2]);
set(gca,'XTickLabel',{'Controls','ASC'})
ylabel(plotLabel.eeg,'FontSize',20);
box off

% difference between controls and ASCs?
[~,P] = ttest2(controlData,ascData);
yax = ylim;
text(1.5, yax(2) - (yax(2)-yax(1))*0.1,['p = ' num2str(P)],'FontSize', 12)

% save bar graphs
if strcmp(analType, 'darts_dartRival')
    figName = [barPlotDir C{iIndex} '_DARTS.jpg'];
else
    figName = [barPlotDir '_' C{iIndex} '_MARZ.jpg'];
end
saveas(gcf,figName,'jpg')
